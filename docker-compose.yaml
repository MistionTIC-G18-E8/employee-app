version: "3.2"
services:
  nginx:
    image: nginx:mainline
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf
    expose:
      - 80
    networks:
      - web

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DEBUG=${DEBUG}
      - INIT_DB=${INIT_DB}
    expose:
      - 8080
    networks:
      - web
    stop_signal: SIGTERM

  frontend:
    container_name: frontend
    build:
      dockerfile: Dockerfile
      context: ./frontend
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
    expose:
      - 3000
    networks:
      - web
    # By able to SIGINT
    stdin_open: true

  mongo-express:
    container_name: dbmanager
    image: docker.io/mongo-express
    restart: always
    expose:
      - 8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - db

  mongodb:
    image : docker.io/mongo:5-focal
    container_name: mongo
    environment:
      - PUID=1000
      - PGID=1000
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/data/db
    expose:
      - 27017
    networks:
      - db
      - web
    restart: unless-stopped
volumes:
  # app-data:
  db-data:
networks:
  web:
  db:
